#!/bin/bash
# Projeto Linux
# Configuracao do Servidor Web

# Atualizar a lista de pacotes e instalar dependências necessárias
sudo apt update 
sudo apt install -y curl gnupg2 ca-certificates lsb-release

# Adicionar a chave de assinatura GPG e configura o repositório do Nginx
curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
echo "deb http://nginx.org/packages/debian $(lsb_release -cs) nginx" | sudo tee /etc/apt/sources.list.d/nginx.list

# Atualizar a lista de pacotes e instalar o Nginx
sudo apt update && sudo apt install -y nginx

# Criar pagina html e salvar em index.html
sudo sh -c cat << 'EOF' > /usr/share/nginx/html/index.html
<!DOCTYPE html>
<html>
<body>

<h1>Projeto Linux e AWS</h1>

        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque id nlear
            isi in augue elementum laoreet et suscipit nisi. 
            Sed imperdiet mattis enim pulvinar dignissim. Fusce euismod, lorem sed mollis lacinia, 
	    urna orci pharetra quam, quis ornare ex est quis tortor. 
            Phasellus dignissim lorem sed purus sodales vestibulum. In at pretium ante. 
	    Mauris accumsan facilisis ligula nec dictum. Fusce odio orci, tristique a mattis non, 
	    sodales sed metus. Suspendisse porttitor nulla sed quam consectetur, 
	    ut porttitor tortor interdum. Pellentesque non aliquet nunc. 
	    Ut aliquam lorem sit amet enim pulvinar lobortis.</p>


<h2><p id="hostname"></p></h2>

<script>
let host = location.host;
document.getElementById("hostname").innerHTML = host;
</script>
</body>
</html>
EOF

# Habilitar e iniciar o serviço Nginx para reinício automático
sudo systemctl enable nginx --now


# Cria um serviço systemd para garantir que o Nginx reinicie automaticamente
sudo sh -c cat << 'EOF' > /etc/systemd/system/nginx-restart.service
[Unit]
Description=Ensure Nginx Web Server always running
After=network.target

[Service]
ExecStart=/usr/sbin/nginx -g 'daemon off;'
ExecReload=/usr/sbin/nginx -s reload
ExecStop=/bin/kill -s QUIT \$MAINPID
PIDFile=/run/nginx.pid
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# Recarregar os Arquivos de Unidade do systemd
sudo systemctl daemon-reload

# Habilitar e Iniciar o Serviço de Reinício Automático
sudo systemctl enable nginx-restart --now
sudo systemctl start nginx-restart





# Monitoramento e Notificacaoes
# Script para criar o monitoramento do site e enviar ao Slack
sudo sh -c cat << 'EOF' > /usr/local/bin/monitoramento_web.sh
#!/bin/bash

LOGFILE="/var/log/monitoramento.log"
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/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" #Substituir pela URL do webhook do Slack 

# Token para obter o IP público da instância AWS
TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
PUBLIC_IP=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -s http://169.254.169.254/latest/meta-data/public-ipv4)

# Nesta parte verificar se o IP público foi obtido com sucesso
if [ -z "$PUBLIC_IP" ]; then
    echo "$(date): erro ao obter o IP público da instância" >> $LOGFILE
    exit 1
fi

# Definir a URL do site
SITE_URL="http://$PUBLIC_IP"

# Verificar se a pasta que criamos monitoramento.log se não cria em log
if [ ! -f "$LOGFILE" ]; then
    sudo touch "$LOGFILE"
    sudo chmod 666 "$LOGFILE"
fi

# Função para enviar notificação para o Slack
send_slack_notification() {
    message="$1"
    payload="{\"text\": \"$message\"}"
    curl -X POST -H "Content-type: application/json" --data "$payload" "$SLACK_WEBHOOK_URL"
}

# Verificar a resposta do site
response=$(curl --write-out "%{http_code}" --silent --output /dev/null "$SITE_URL")

# Verificar se o status da resposta não é 200(OK)
if [ "$response" -ne 200 ]; then
    log_message="$(date): $SITE_URL is down (HTTP status: $response)"
    echo "$log_message" >> $LOGFILE
    send_slack_notification "$log_message"
else
    log_message="$(date): $SITE_URL is up (HTTP status: $response)"
    echo "$log_message" >> $LOGFILE
fi
EOF

# Aqui tornaremos o script executável
sudo chmod +x /usr/local/bin/monitoramento_web.sh

# Comando para instalar o cron
sudo apt install cron -y

# Aqui adicionar a tarefa cron para rodar a cada 1 minuto
(sudo crontab -l 2>/dev/null; echo "* * * * * /usr/local/bin/monitoramento_web.sh") | sudo crontab -

# Execute o comando para iniciar o cron
sudo service cron start

